name: Calc Helper Continous Delivery

on:
  push:
    tags: 
      - '*'
  pull_request:
    tags: 
      - '*'

jobs:
  create-release:
   runs-on: windows-latest
   steps:
   - name: Extract tag name
     id: tag
     uses: actions/github-script@0.2.0
     with:
      github-token: ${{ secrets.GITHUB_TOKEN }}
      script: |
       return context.payload.ref.replace(/\/refs\/tags\//, '');
   - name: Create release
     id: create_release
     uses: actions/create-release@v1
     env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
     with:
        tag_name: ${{ steps.tag.outputs.result }}
        release_name: ${{ steps.tag.outputs.result }}
        draft: false
        prerelease: false
   - id: set_upload_url
     run: echo "::set-output name=upload-url::${{ steps.create_release.outputs.upload_url }}"
     
  build:
    needs: [create-release]
    strategy:
      matrix:
        targetplatform: [x86, x64]
        targetSystem: [win]
    runs-on: windows-latest
    env:
      Solution_Path: CalcHelperDesktop.sln
      Test_Project_Path: CalcHelperDesktop.Tests\CalcHelperDesktop.Tests.csproj
      Wpf_Project_Path: CalcHelperDesktop\CalcHelperDesktop.csproj
      Actions_Allow_Unsecure_Commands: true
  
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Install .NetCore
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '3.1.302'
    
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.1
    
    - name: Restore application dependencies
      run: msbuild .\CalcHelperDesktop.sln /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier
      env:
        Configuration: Debug
        RuntimeIdentifier: ${{ matrix.targetSystem }}-${{ matrix.targetplatform }}
    
    - name: Build Application as single exe
      run: msbuild .\CalcHelperDesktop.sln /t:CalcHelperDesktop /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RuntimeIdentifier /p:PublishSingleFile=true /p:UseAppHost=true
      env:
        Configuration: Debug
        RuntimeIdentifier: ${{ matrix.targetSystem }}-${{ matrix.targetplatform }}
    
    - name: Execute Unit Tests
      run: Get-ChildItem "LegacyProjTests" -recurse | where {$_.extension -eq ".csproj"} | % { dotnet test $_.FullName }
    
    - name: Archive builds artifacts
      uses: papeloto/action-zip@v1
      with:
       files: dist/ manifest.json
       dest: Dev (${{ matrix.targetSystem }}-${{ matrix.targetplatform }}).zip
    
    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload-url }}
        asset_path: Dev (${{ matrix.targetSystem }}-${{ matrix.targetplatform }}).zip
        asset_name: Dev (${{ matrix.targetSystem }}-${{ matrix.targetplatform }})
        asset_content_type: application/zip
   
